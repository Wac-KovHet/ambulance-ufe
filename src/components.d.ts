/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface XkovhetAmbulanceWlApp {
        "ambulanceId": string;
        "apiBase": string;
        "basePath": string;
    }
    interface XkovhetAmbulanceWlEditor {
        "ambulanceId": string;
    }
    interface XkovhetAmbulanceWlEmployeeEditor {
    }
    interface XkovhetAmbulanceWlEmployeeList {
    }
    interface XkovhetAmbulanceWlList {
        "ambulanceId": string;
        "apiBase": string;
    }
    interface XkovhetNavigation {
    }
}
export interface XkovhetAmbulanceWlEditorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXkovhetAmbulanceWlEditorElement;
}
export interface XkovhetAmbulanceWlListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXkovhetAmbulanceWlListElement;
}
declare global {
    interface HTMLXkovhetAmbulanceWlAppElement extends Components.XkovhetAmbulanceWlApp, HTMLStencilElement {
    }
    var HTMLXkovhetAmbulanceWlAppElement: {
        prototype: HTMLXkovhetAmbulanceWlAppElement;
        new (): HTMLXkovhetAmbulanceWlAppElement;
    };
    interface HTMLXkovhetAmbulanceWlEditorElementEventMap {
        "editor-closed": string;
        "employee-list": string;
    }
    interface HTMLXkovhetAmbulanceWlEditorElement extends Components.XkovhetAmbulanceWlEditor, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXkovhetAmbulanceWlEditorElementEventMap>(type: K, listener: (this: HTMLXkovhetAmbulanceWlEditorElement, ev: XkovhetAmbulanceWlEditorCustomEvent<HTMLXkovhetAmbulanceWlEditorElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXkovhetAmbulanceWlEditorElementEventMap>(type: K, listener: (this: HTMLXkovhetAmbulanceWlEditorElement, ev: XkovhetAmbulanceWlEditorCustomEvent<HTMLXkovhetAmbulanceWlEditorElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXkovhetAmbulanceWlEditorElement: {
        prototype: HTMLXkovhetAmbulanceWlEditorElement;
        new (): HTMLXkovhetAmbulanceWlEditorElement;
    };
    interface HTMLXkovhetAmbulanceWlEmployeeEditorElement extends Components.XkovhetAmbulanceWlEmployeeEditor, HTMLStencilElement {
    }
    var HTMLXkovhetAmbulanceWlEmployeeEditorElement: {
        prototype: HTMLXkovhetAmbulanceWlEmployeeEditorElement;
        new (): HTMLXkovhetAmbulanceWlEmployeeEditorElement;
    };
    interface HTMLXkovhetAmbulanceWlEmployeeListElement extends Components.XkovhetAmbulanceWlEmployeeList, HTMLStencilElement {
    }
    var HTMLXkovhetAmbulanceWlEmployeeListElement: {
        prototype: HTMLXkovhetAmbulanceWlEmployeeListElement;
        new (): HTMLXkovhetAmbulanceWlEmployeeListElement;
    };
    interface HTMLXkovhetAmbulanceWlListElementEventMap {
        "entry-clicked": string;
    }
    interface HTMLXkovhetAmbulanceWlListElement extends Components.XkovhetAmbulanceWlList, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXkovhetAmbulanceWlListElementEventMap>(type: K, listener: (this: HTMLXkovhetAmbulanceWlListElement, ev: XkovhetAmbulanceWlListCustomEvent<HTMLXkovhetAmbulanceWlListElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXkovhetAmbulanceWlListElementEventMap>(type: K, listener: (this: HTMLXkovhetAmbulanceWlListElement, ev: XkovhetAmbulanceWlListCustomEvent<HTMLXkovhetAmbulanceWlListElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXkovhetAmbulanceWlListElement: {
        prototype: HTMLXkovhetAmbulanceWlListElement;
        new (): HTMLXkovhetAmbulanceWlListElement;
    };
    interface HTMLXkovhetNavigationElement extends Components.XkovhetNavigation, HTMLStencilElement {
    }
    var HTMLXkovhetNavigationElement: {
        prototype: HTMLXkovhetNavigationElement;
        new (): HTMLXkovhetNavigationElement;
    };
    interface HTMLElementTagNameMap {
        "xkovhet-ambulance-wl-app": HTMLXkovhetAmbulanceWlAppElement;
        "xkovhet-ambulance-wl-editor": HTMLXkovhetAmbulanceWlEditorElement;
        "xkovhet-ambulance-wl-employee-editor": HTMLXkovhetAmbulanceWlEmployeeEditorElement;
        "xkovhet-ambulance-wl-employee-list": HTMLXkovhetAmbulanceWlEmployeeListElement;
        "xkovhet-ambulance-wl-list": HTMLXkovhetAmbulanceWlListElement;
        "xkovhet-navigation": HTMLXkovhetNavigationElement;
    }
}
declare namespace LocalJSX {
    interface XkovhetAmbulanceWlApp {
        "ambulanceId"?: string;
        "apiBase"?: string;
        "basePath"?: string;
    }
    interface XkovhetAmbulanceWlEditor {
        "ambulanceId"?: string;
        "onEditor-closed"?: (event: XkovhetAmbulanceWlEditorCustomEvent<string>) => void;
        "onEmployee-list"?: (event: XkovhetAmbulanceWlEditorCustomEvent<string>) => void;
    }
    interface XkovhetAmbulanceWlEmployeeEditor {
    }
    interface XkovhetAmbulanceWlEmployeeList {
    }
    interface XkovhetAmbulanceWlList {
        "ambulanceId"?: string;
        "apiBase"?: string;
        "onEntry-clicked"?: (event: XkovhetAmbulanceWlListCustomEvent<string>) => void;
    }
    interface XkovhetNavigation {
    }
    interface IntrinsicElements {
        "xkovhet-ambulance-wl-app": XkovhetAmbulanceWlApp;
        "xkovhet-ambulance-wl-editor": XkovhetAmbulanceWlEditor;
        "xkovhet-ambulance-wl-employee-editor": XkovhetAmbulanceWlEmployeeEditor;
        "xkovhet-ambulance-wl-employee-list": XkovhetAmbulanceWlEmployeeList;
        "xkovhet-ambulance-wl-list": XkovhetAmbulanceWlList;
        "xkovhet-navigation": XkovhetNavigation;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "xkovhet-ambulance-wl-app": LocalJSX.XkovhetAmbulanceWlApp & JSXBase.HTMLAttributes<HTMLXkovhetAmbulanceWlAppElement>;
            "xkovhet-ambulance-wl-editor": LocalJSX.XkovhetAmbulanceWlEditor & JSXBase.HTMLAttributes<HTMLXkovhetAmbulanceWlEditorElement>;
            "xkovhet-ambulance-wl-employee-editor": LocalJSX.XkovhetAmbulanceWlEmployeeEditor & JSXBase.HTMLAttributes<HTMLXkovhetAmbulanceWlEmployeeEditorElement>;
            "xkovhet-ambulance-wl-employee-list": LocalJSX.XkovhetAmbulanceWlEmployeeList & JSXBase.HTMLAttributes<HTMLXkovhetAmbulanceWlEmployeeListElement>;
            "xkovhet-ambulance-wl-list": LocalJSX.XkovhetAmbulanceWlList & JSXBase.HTMLAttributes<HTMLXkovhetAmbulanceWlListElement>;
            "xkovhet-navigation": LocalJSX.XkovhetNavigation & JSXBase.HTMLAttributes<HTMLXkovhetNavigationElement>;
        }
    }
}
